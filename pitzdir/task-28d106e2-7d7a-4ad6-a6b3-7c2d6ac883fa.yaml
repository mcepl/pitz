components:
- !!python/object:uuid.UUID
  int: 170479705391647032501098302123768246956
created_by: &id001 !!python/object:uuid.UUID
  int: 217356799640352244068158184369341070513
created_time: 2009-09-29 18:52:09.728004
description: "This IRC session explains the problem::\n\n    18:42 < mw44118> So,\
  \ can somebody explain what is so bad about\n    subclassing list?\n    18:43 <\
  \ KirkMcDonald> mw44118: The methods of the list type do not\n    perform virtual\
  \ calls on its other methods.\n    18:43 < dash> mw44118: and since list's existing\
  \ methods won't call\n    your code, you have to override everything anyway\n  \
  \  18:43 < mw44118> KirkMcDonald: is that also true when subclassing\n    dict?\n\
  \    18:43 < dash> yes\n    18:43 < KirkMcDonald> mw44118: Yes.\n    18:44 < mw44118>\
  \ KirkMcDonald: I came across that issue with dict.\n    I defined my own __setitem__,\
  \ then discovered self.update() ignored\n    my own.\n    18:44 < KirkMcDonald>\
  \ Indeed.\n\nIn other words, a subclass of list won't use my __getitem__ on its\
  \ own\ninternal calls to stuff.\n\nThe right solution as of python2.6 is to subclass\n\
  collections.MutableMapping for dictionaries, and for lists, use\ncollections.MutableSequence."
estimate: !!python/object:uuid.UUID
  int: 207205260775652781422748338617572801073
html_file_saved: 2009-10-03 20:02:34.878199
milestone: !!python/object:uuid.UUID
  int: 281829325005055660957328011118288254534
modified_time: 2010-02-21 10:56:53.692770
owner: *id001
pscore: 0
status: !!python/object:uuid.UUID
  int: 181191650815078915740523248343325601886
title: Convert Bag from subclassed list
type: task
uuid: !!python/object:uuid.UUID
  int: 54254449513686232616674159611597063162
yaml_file_saved: 2010-02-21 10:56:53.706928
