comments: []
components: []
created_time: 2009-06-14 12:57:30.516815
description: "Right now, in the Task class, I have this code::\n\n    allowed_values\
  \ = dict(\n            status=['unstarted', 'started', 'abandoned', 'finished'],\n\
  \                )\n\nPitz uses this to make sure that the status has one of those\
  \ values.  It\nmight be nicer to just make an assertion that the status field must\
  \ be\nan instance of a Status entity.  And the each project could define\nwhatever\
  \ status it wanted to.\n"
estimate: !!python/object:uuid.UUID
  int: 334988786726400201598883942844016081861
html_file_saved: &id001 2009-09-26 14:13:35.405852
milestone: !!python/object:uuid.UUID
  int: 43202488294965147244317640483158997306
modified_time: *id001
pscore: 0
status: !!python/object:uuid.UUID
  int: 181191650815078915740523248343325601886
title: Consider storing stuff like status values (unstarted, started, abandoned, finished)
  as entities instead of strings
type: task
uuid: !!python/object:uuid.UUID
  int: 133769196855580053922929763053358197917
yaml_file_saved: 2009-09-26 14:13:38.218868
