components:
- !!python/object:uuid.UUID
  int: 4957623306508968194182393857812906256
created_by: &id002 !!python/object:uuid.UUID
  int: 217356799640352244068158184369341070513
created_time: 2009-10-03 12:03:08.677439
description: "Here's the bug:\n\n1.  In one terminal, I start a pitz-shell session.\n\
  \n2.  In a different terminal, I use pitz-start-task to claim and start a\n    task.\
  \ \n\n    The pitz-start-task writes out an updated yaml file and a fresh pickle.\n\
  \n3.  I close the pitz-shell session.  That writes out a new pickle file\n    also,\
  \ on top of the one written by pitz-start-task.\n\nAfter that, the fact that I started\
  \ the task is lost, at least according\nto the pickle file.  I'm not sure what the\
  \ yaml file says.\n\nI'm not sure what the solution should be.\n\nMaybe pitz-shell\
  \ could remember the timestamp of the pickle it used to\nstart the session.  Then\
  \ when it saves itself, if the pickle file has\nbeen updated, then, it would not\
  \ save over it.\n\nThis would be nasty if I did a bunch of work in pitz-shell and\
  \ with\ncommand-line scripts.\n\nMaybe I just need some locking system where I can\
  \ only load the pickle\ninto one process at a time."
estimate: !!python/object:uuid.UUID
  int: 194238884256655928753821602839070306529
html_file_saved: &id001 2009-10-03 20:02:31.377237
milestone: !!python/object:uuid.UUID
  int: 286057988816149038667284962231564097114
modified_time: *id001
owner: *id002
pscore: 0
status: !!python/object:uuid.UUID
  int: 327359014471868074244219043980996376403
title: Don't allow saving pickle over fresh yaml
type: task
uuid: !!python/object:uuid.UUID
  int: 114899869833498279986455571549004555295
yaml_file_saved: 2009-10-03 20:03:04.901545
