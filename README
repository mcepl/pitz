+++++++++++++++
Welcome to Pitz
+++++++++++++++

What is pitz
============

Or more accurately, what will pitz be?

Pitz is a yet another bugtracking system, with these goals:

* Use your editor to add tasks.

* Use your source control system (git, svn, zipped files, whatever) to
  track history.

* Use a command-line program to do simple queries, like:

    * Show all the tasks assigned to Matt and linked to milestone 2.0;
    * Show all the milestones with release dates in 2008 or 2009.

* Render some simple html files based on all the tasks.

* Use a data model backend optimized for flexibility so that new
  groupings are trivial to add.

Ingredients
===========

This list keeps changing, but this is the current idea:

* Use yaml to serialize and unserialize data.

* For all the data stored in yaml files, pitz will build a big fat EAV
  (entity-attribute-value) data structure.

* All queries should expressed as a list of attribute-value pairs.
  Here is how to ask for all milestones with release dates in 2008 or
  2009:

    [
        ('type', 'milestone')
        ('release-date', [2008, 2009])
    ]

  All the pairs are joined by AND statements.  Using a list in the value
  spot means you accept any value in that list.
